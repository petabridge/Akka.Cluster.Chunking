syntax = "proto3";

package Akka.Cluster.Chunking.Proto;

// Defines a remote ActorRef that "remembers" and uses its original Actor instance on the original node.
message ActorRefData {
  string path = 1;
}

// defines the user-defined message, wrapped inside the ChunkedDelivery
message Payload {
  bytes message = 1;
  int32 serializerId = 2;
  bytes messageManifest = 3;
}

enum DeliveryNackReason{
  TIMEOUT = 0;
  BUFFER_FULL = 1;
  SENDING_TERMINATED = 2;
}

// defines the ChunkedDelivery message
message ChunkedDelivery{
  Payload Payload = 1;
  ActorRefData Recipient = 2;
  ActorRefData Sender = 3;
}

message RegisterConsumer {
  ActorRefData Consumer = 1;
}